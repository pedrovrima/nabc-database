// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Bander {
  id                       Int          @id @default(autoincrement())
  first_name               String
  last_name                String
  email                    String
  address                  String
  nationality              String
  gender                   String
  race                     String
  privacy_level            String?
  remarks                  String?
  session_chaired          Session[]
  evaluations_participated Evaluation[]
  sessions_evaluated       Evaluator[]
  max_raptors               Levels?
  max_passerines            Levels?
  max_hummingbirds           Levels?
  max_waterfowl            Levels?
  max_shorebirds            Levels?
}

model Session {
  id           Int          @id @default(autoincrement())
  city         String
  state        String
  country      String
  organization String
  date         DateTime
  chair        Bander       @relation(fields: [chairId], references: [id])
  chairId      Int
  evaluations  Evaluation[]
  finalized    Boolean      @default(false)

}

model Evaluator {

  id           Int        @id @default(autoincrement())
  bander       Bander     @relation(fields: [banderId], references: [id])
  banderId     Int
  evaluation   Evaluation @relation(fields: [evaluationId], references: [id], onDelete: Cascade)
  evaluationId Int
}

model Evaluation {
  id            Int         @id @default(autoincrement())
  bander        Bander      @relation(fields: [banderId], references: [id])
  banderId      Int
  level         Levels
  taxa          Taxa
  session       Session     @relation(fields: [sessionId], references: [id])
  sessionId     Int
  evaluators    Evaluator[]
  final_result  Result?
  written_score Float?
  notes      String?
  paid          Boolean?
  trapping_methods EvaluationTraps[]
}

model EvaluationTraps {
  id           Int        @id @default(autoincrement())
  evaluation   Evaluation @relation(fields: [evaluationId], references: [id], onDelete: Cascade)
  evaluationId Int
  trap         Traps
}

enum Taxa {
  Passerines
  Shorebirds
  Waterfowl
  Hummingbirds
  Raptors

}

enum Traps {
  Mistnet
  Trap
}

enum Levels {
  None
  Assistant
  Bander
  Trainer
}

enum Result {
  Approved
  Rejected
  Assistant
  TBD
}
